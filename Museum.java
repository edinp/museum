package ba.bitcamp.day48.test.zaid;

import java.util.TreeSet;

public class Museum {
	
	private String museum;
	
	private TreeSet<Exponat> exponat;
	private TreeSet<Arts> art;
	private TreeSet<Historic> historic;
	private TreeSet<Employee> employees;

	/*
	 * Constructor for object Museum
	 */
	public Museum(String name) {
		this.museum = name;
		this.exponat = new TreeSet<Exponat>();
		this.art = new TreeSet<Arts>();
		this.historic = new TreeSet<Historic>();
		this.employees = new TreeSet<Employee>();
	}
	
	/*
	 * Adds selected exponat to the set of exponats in museum.
	 */
	public void addExponat (Exponat e) {
		exponat.add(e);
	}
	
	/*
	 * Adds selected art to the set of arts in museum.
	 */
	public void addArts (Arts a) {
		art.add(a);
	}
	
	/*
	 * Adds historic artefect to the set of artefects in museum.
	 */
	public void addHistoric (Historic h) {
		historic.add(h);
	}
	
	/*
	 * Adds an employee to the set of employees working in museum.
	 */
	public void addEmployee (Employee emp) {
		employees.add(emp);
	}
	
	/*
	 * Returns total number of exponats in museum.
	 */
	public int numberOfExponats() {
		return exponat.size() + art.size() + historic.size();
	}
	
	/*
	 * Getters and setters automaticly generated by Eclipse.
	 */
	public String getMuseum() {
		return museum;
	}

	public void setMuseum(String museum) {
		this.museum = museum;
	}

	public TreeSet<Exponat> getExponat() {
		return exponat;
	}

	public void setExponat(TreeSet<Exponat> exponat) {
		this.exponat = exponat;
	}

	public TreeSet<Arts> getArt() {
		return art;
	}

	public void setArt(TreeSet<Arts> art) {
		this.art = art;
	}

	public TreeSet<Historic> getHistoric() {
		return historic;
	}

	public void setHistoric(TreeSet<Historic> historic) {
		this.historic = historic;
	}

	public TreeSet<Employee> getEmployee() {
		return employees;
	}

	public void setEmployee(TreeSet<Employee> employee) {
		this.employees = employee;
	}
	
	/*
	 * Prints all employees working in museum.
	 */
	public void printEmployees() {
		for (Employee em : employees) {
			System.out.println(em);
		}
	}
	
	/*
	 * Prints exponats in museum.
	 */
	public void printExponats() {
		for (Exponat ex : exponat) {
			System.out.println(ex);
		}
	}
	
	/*
	 * Prints all arts in museum.
	 */
	public void printArts() {
		for (Arts a : art) {
			System.out.println(a);
		}
	}
	
	/*
	 * Prints all historic artefects in museum.
	 */
	public void printHistoric() {
		for (Historic h : historic) {
			System.out.println(h);
		}
	}
	
	public String toString() {
		return museum + " (total exponats: " + numberOfExponats() + ")";
	}

	

}
